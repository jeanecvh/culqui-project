<template>
  <div class="container-tab" :style="styleContainerTab">
    <button
      type="button"
      class="tab tab--1"
      :style="props.tab1 === current && classActive"
      role="navigation"
      tabindex="0"
      @click.prevent="currentTab(props.tab1)"
      @keydown.space="currentTab(props.tab1)"
    >
      {{ $t(props.nameTab1) }}
      <span
        v-if="props.tab1Completed"
        class="container-tab__check container-tab__check--1"
      ></span>
    </button>
    <button
      type="button"
      class="tab tab--2"
      :style="props.tab2 === current && classActive"
      role="navigation"
      tabindex="0"
      :disabled="disableTab2"
      @click.prevent="currentTab(props.tab2)"
      @keydown.space="currentTab(props.tab2)"
    >
      {{ $t(props.nameTab2) }}
      <span
        v-if="props.tab2Completed"
        class="container-tab__check container-tab__check--2"
      ></span>
    </button>
    <button
      type="button"
      class="tab tab--3"
      :style="props.tab3 === current && classActive"
      tabindex="0"
      role="navigation"
      :disabled="props.tab3Disabled"
      @click.prevent="currentTab(props.tab3)"
      @keydown.space="currentTab(props.tab3)"
    >
      {{ $t(props.nameTab3) }}
      <span
        v-if="props.tab3Completed"
        class="container-tab__check container-tab__check--3"
      ></span>
    </button>
    <KeepAlive>
      <component :is="current" />
    </KeepAlive>
  </div>
</template>
<script setup>
import { computed, onMounted, shallowRef, ref } from 'vue';

const current = shallowRef(null);
const fontSize = ref(props.fontSize);
const checkLeft = ref(props.checkLeft);
const checkLeft2 = ref(props.checkLeft2);
const clickTab = ref(false);

const props = defineProps({
  tab1: {
    type: Object,
    default: () => {},
  },
  tab2: {
    type: Object,
    default: () => {},
  },
  tab3: {
    type: Object,
    default: () => {},
  },
  nameTab1: {
    type: String,
    default: 'none',
  },
  nameTab2: {
    type: String,
    default: 'none',
  },
  nameTab3: {
    type: String,
    default: 'none',
  },
  tab1Completed: {
    type: Boolean,
    default: false,
  },
  tab2Completed: {
    type: Boolean,
    default: false,
  },
  tab3Completed: {
    type: Boolean,
    default: false,
  },
  tab3Disabled: {
    type: Boolean,
    default: false,
  },
  level2: {
    type: Boolean,
    default: false,
  },
  fontSize: {
    type: String,
    default: '25px',
  },
  checkLeft: {
    type: String,
    default: '0px',
  },
  checkLeft2: {
    type: String,
    default: '0px',
  },
  heightContainer: {
    type: String,
    default: '59px',
  },
});

const emit = defineEmits(['change']);

const disableTab2 = computed(() => {
  if (props.level2 && !props.tab1Completed) {
    return true;
  }
  return false;
});

const currentTab = (data) => {
  const { __name } = data;
  current.value = data;
  clickTab.value = true;
  emit('change', __name);
};

onMounted(() => {
  if (props.level2) {
    currentTab(props.tab1);
  }
});

const classActive = {
  'color': 'black',
  'background-color': 'white',
  'border': 'none',
};

const styleContainerTab = computed(() => {
  return {
    'border-radius': !clickTab.value ? '20px 20px 0px 0px' : '20px',
    'height': props.heightContainer,
  };
});
</script>

<style lang="scss" scoped>
@import '@/core/styles/mixins';
@import '@/core/styles/variables';
.container-tab {
  width: 1020px;
  background-color: $color-nav-tab;
  //border-radius: 20px;
  position: absolute;
  z-index: 999;
  display: flex;
  flex-wrap: wrap;
  &__check {
    width: 35px;
    height: 30px;
    background-color: $colorless;
    position: relative;
    background-image: url('@/core/assets/images/check-24-3.png');
    background-size: contain;
    background-repeat: no-repeat;
    z-index: 999;
    &--1 {
      margin-left: v-bind(checkLeft);
    }
    &--2 {
      margin-left: -22px;
      left: v-bind(checkLeft2);
    }
    &--3 {
      margin-left: v-bind(checkLeft);
    }
  }
  .tab {
    @include font-text($color-white);
    font-size: v-bind(fontSize);
    width: 336px;
    height: 60px;
    border: none;
    border-radius: 20px 20px 0px 0px;
    border-color: $color-nav-tab;
    border-bottom-style: solid;
    border-bottom-width: 2px;
    cursor: pointer;
    margin: 2px;
    display: flex;
    justify-content: center;
    flex-direction: row-reverse;
    align-items: center;
    &:active {
      background-color: $color-white;
      color: $color-black;
      outline-style: none;
    }
    &:disabled {
      background-color: $color-tab-disabled;
      color: $color-white;
      cursor: default;
    }__name
    &--1 {
      background-color: $color-tab-blue;
    }
    &--2 {
      background-color: $color-tab-purple;
    }
    &--3 {
      background-color: $color-tab-magenta;
    }
  }
}
.active {
  background-color: $color-white;
  color: $color-black;
  outline-style: none;
}
</style>